<div class="order-detail">
    {% for item in order.items %}
        <div class="row order-detail__product">
            <div class="col-xs-11">{{ include('VcareWebBundle:Product:_variant.html.twig', {'variant': item.variant}) }}</div>
            <div class="col-xs-4 order-detail__product--l">{{ 'sylius.ui.qty'|trans }}</div>
            <div class="col-xs-7">{{ item.quantity }}</div>
            <div class="col-xs-4 order-detail__product--l">{{ 'sylius.ui.unit_price'|trans }}</div>
            <div class="col-xs-7">{{ item.unitPrice|sylius_price(order.currencyCode, order.exchangeRate) }}</div>
            <div class="col-xs-4 order-detail__product--l">{{ 'sylius.ui.total'|trans }}</div>
            <div class="col-xs-7">{{ item.subtotal|sylius_price(order.currencyCode, order.exchangeRate) }}</div>
        </div>
    {% endfor %}

    <div class="row order-detail__total">
        <div class="col-xs-6 order-detail__total--l">
            <span class="pull-right">
                {{ 'sylius.ui.subtotal'|trans }}
            </span>
        </div>
        <div class="col-xs-5">
            {{ order.itemsTotal|sylius_price(order.currencyCode, order.exchangeRate) }}
        </div>
    </div>
    <div class="row order-detail__total">
        <div class="col-xs-6 order-detail__total--l">
            <span class="pull-right">
                {{ 'sylius.ui.tax_total'|trans }}
            </span>
        </div>
        <div class="col-xs-5">
            {{ order.taxTotal|sylius_price(order.currencyCode, order.exchangeRate) }}
        </div>
    </div>
    <div class="row order-detail__total">
        <div class="col-xs-6 order-detail__total--l">
            <span class="pull-right">
                {{ 'sylius.ui.shipping_total'|trans }}
            </span>
        </div>
        <div class="col-xs-5">
            {{ order.shippingTotal|sylius_price(order.currencyCode, order.exchangeRate) }}
        </div>
    </div>

    {% set orderPromotionAdjustment = constant('Sylius\\Component\\Core\\Model\\AdjustmentInterface::ORDER_PROMOTION_ADJUSTMENT') %}
    {% set orderPromotions = sylius_aggregate_adjustments(order.getAdjustmentsRecursively(orderPromotionAdjustment)) %}

    {% if not orderPromotions is empty %}
        <div class="row order-detail__total">
            <div class="col-xs-6 order-detail__total--l">
                <span class="pull-right">
                    {{ 'sylius.ui.promotion_total'|trans }}
                </span>
                <ul>
                    {% for label, amount in orderPromotions %}
                        <li class="item">
                            {{ label }} {% if not amount == 0 %}-{% endif %}{{ (-1 * amount)|sylius_price(order.currencyCode, order.exchangeRate) }}
                        </li>
                    {% endfor %}
                </ul>
            </div>

            {% set orderDiscount = order.adjustmentsTotalRecursively(orderPromotionAdjustment) %}
            <div class="col-xs-5">
                {% if not orderDiscount == 0 %}-{% endif %}{{ (-1 * orderDiscount)|sylius_price(order.currencyCode, order.exchangeRate) }}
            </div>
        </div>
    {% endif %}

    <div class="row order-detail__total order-detail__total--total">
        <div class="col-xs-6 order-detail__total--l">
            <span class="pull-right">
                {{ 'sylius.ui.total'|trans }}
            </span>
        </div>
        <div class="col-xs-5">{{ order.total|sylius_price(order.currencyCode, order.exchangeRate) }}</div>
    </div>
</div>
